import { resolveStaticPaths, resolveStaticProps } from '@watheia/api.stackbit';
import { renderLayout } from '@watheia/waweb.ui';
import { InferGetStaticPropsType } from 'next';
import { sourcebitDataClient } from 'sourcebit-target-next';
import { withRemoteDataUpdates } from 'sourcebit-target-next/with-remote-data-updates';

export type PageProps = InferGetStaticPropsType<typeof getStaticProps>;

export function Page({ page, site }: PageProps) {
  return renderLayout(page, site);
}

export async function getStaticPaths() {
  // The "data" object is generated by sourcebit.js and cached inside .sourcebit-nextjs-cache.json
  const data = await sourcebitDataClient.getData();
  const paths = resolveStaticPaths(data);
  return { paths, fallback: false };
}

export async function getStaticProps({ params }) {
  // The "data" object is generated by sourcebit.js and cached inside .sourcebit-nextjs-cache.json
  const data = await sourcebitDataClient.getData();
  const urlPath = '/' + (params.slug || []).join('/');
  const props = await resolveStaticProps(urlPath, data);
  return { props };
}

export default withRemoteDataUpdates(Page);
